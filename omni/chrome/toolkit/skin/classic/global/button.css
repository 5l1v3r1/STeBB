/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License Version
 * 1.1 (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the License is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License
 * for the specific language governing rights and limitations under the
 * License.
 *
 * The Original Code is Mozilla Communicator client code, released
 * March 31, 1998.
 *
 * The Initial Developer of the Original Code is
 * Netscape Communications Corporation.
 * Portions created by the Initial Developer are Copyright (C) 1998-1999
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 *   Joe Hewitt (hewitt@netscape.com)
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */

/* ===== button.css =====================================================
  == Styles used by the XUL button element.
  ======================================================================= */

@namespace url("http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul");

/* :::::::::: button :::::::::: */

button{
  -moz-appearance: none;
  margin: 1px 5px 2px 5px;
  min-width: 6.3em;
  border-radius: 4.5px;
  border: 1px solid;
  border-color: rgba(10,10,10,.5) rgba(10,10,10,.75) rgba(10,10,10,1);
  box-shadow:  0px 1px 1px rgba(255, 255, 255, 0.2) inset, 0pt 1px 0pt rgba(255, 255, 255, 0.1);
  background: rgba(10,10,10,1)
              -moz-linear-gradient(rgba(97, 97, 97, 0.65), rgba(97, 97, 97, 0.3) 49%,
			  rgba(80, 80, 80, 0.3) 51%, rgba(80, 80, 80, 0.18));
  color: #a6a6a6;
  text-shadow: none;
}

button:hover {
  background: rgba(8,8,8,1)
              -moz-linear-gradient(rgba(97, 97, 97, 0.45), rgba(97, 97, 97, 0.15) 49%,
			  rgba(75, 75, 75, 0.12) 51%, rgba(75, 75, 75, 0.08));
  color: #ffffff;
  -moz-transition: .2s ease-in;
}

.button-box {
  border: 1px solid transparent;
  padding-top: 1px;
  padding-bottom: 2px;
  -moz-padding-start: 3px;
  -moz-padding-end: 4px;
}

.button-text {
  margin: 0 !important;
  text-align: center;
}

/* .......... focused state .......... */

button:focus {
  color :#00ee41 !important;
  -moz-transition: .2s ease-in;
}

/* .......... active/open/checked state .......... */

button/*:hover*/:active,
button[open="true"],
button[checked="true"] {
  box-shadow: 0px 0px 5px rgba(4,4,4,1) inset,
			  0 1px 0 rgba(255,255,255,.1);
  -moz-transition: .2s ease-in;
}

button/*:hover*/:active > .button-box:-moz-system-metric(windows-classic),
button[open="true"] > .button-box:-moz-system-metric(windows-classic),
button[checked="true"] > .button-box:-moz-system-metric(windows-classic) {
  padding-top: 2px;
  padding-bottom: 1px;
  -moz-padding-start: 4px;
  -moz-padding-end: 3px;
}

/* .......... disabled state .......... */

button[disabled="true"] {
  background: rgba(6,6,6,1)
              -moz-linear-gradient(rgba(110, 110, 110, 0.95), rgba(97, 97, 97, 0.64) 49%,
			  rgba(70, 70, 70, 0.75) 51%, rgba(70, 70, 70, 0.5));
  border-radius: 4.5px;
  border: 1px solid;
  border-color: rgba(10,10,10,.5) rgba(10,10,10,.75) rgba(10,10,10,1);
  box-shadow: 0 1px 0 rgba(255,255,255,.1);
  cursor:default;
  color: rgba(220,220,220,.6) !important;
}

button[disabled="true"]:-moz-system-metric(windows-classic) {
  /*color: ThreeDShadow;*/
  text-shadow: 1px 1px ThreeDHighlight;
}

button[disabled="true"] > .button-box {
  padding-top: 1px !important;
  padding-bottom: 2px !important;
  -moz-padding-start: 3px !important;
  -moz-padding-end: 4px !important;
}

/* ::::: menu/menu-button buttons ::::: */

button[type="menu-button"] {
  margin: 0;
  border: none;
}

.button-menu-dropmarker,
.button-menubutton-dropmarker {
  -moz-appearance: none !important;
  margin: 1px;
  background-color: transparent;
  border: none;
  width: 11px;
  height: 11px;
}

.button-menubutton-dropmarker[open="true"] {
  margin-top: 2px;
  margin-bottom: 0px;
  -moz-margin-start: 2px;
  -moz-margin-end: 0px;
}

/* ::::: plain buttons ::::: */

button.plain {
  border: 0px !important;
  margin: 0px !important;
  padding: 0px !important;
}

button[type="disclosure"] {
  border: 0px !important;
  margin: 0px !important;
  padding: 0px !important;
  -moz-appearance: none;
  list-style-image: url("chrome://global/skin/tree/twisty-clsd.png");
  min-width: 0px !important;
  background-color: transparent;
}

button[type="disclosure"][open="true"] {
  list-style-image: url("chrome://global/skin/tree/twisty-open.png");
}
